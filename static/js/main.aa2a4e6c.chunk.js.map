{"version":3,"sources":["gameHelpers.js","img/bg.png","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/styles/StyledTutorial.js","components/Tutorial.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","Cell","console","log","React","memo","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","StyledTutorial","Tutorial","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa2a4e6c.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, \"clear\"])\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  // Sử dụng vòng lặp for để có thể return (va break). Không thể với forEach\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      //1.kt xem co o tren 1 o(cell) tetromino thuc su k\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          //2.kt dang di chuyen o ben trong chieu cao kv choi k (y) k nen cho no di xuyen qua canh duoi\n          !stage[y + player.pos.y + moveY] ||\n          //3.ktra dang di chuyen o ben trong chieu rong kv choi k (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          //4. ktra o(cell) dang di chuyen k dc thiet lap la 'clear' (cac o k rong k phai tetromino k va cham)\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            \"clear\"\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  // 5.ngoai ra thi la false\n  return false;\n};\n","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from 'styled-components';\n// BG Image\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","export const TETROMINOS = {\n  0: { shape: [[0]], color: \"0, 0, 0\" },\n  I: {\n    shape: [\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n      [0, \"I\", 0, 0],\n    ],\n    color: \"80, 227, 230\",\n  },\n  J: {\n    shape: [\n      [0, \"J\", 0],\n      [0, \"J\", 0],\n      [\"J\", \"J\", 0],\n    ],\n    color: \"36, 95, 223\",\n  },\n  L: {\n    shape: [\n      [0, \"L\", 0],\n      [0, \"L\", 0],\n      [0, \"L\", \"L\"],\n    ],\n    color: \"223, 173, 36\",\n  },\n  O: {\n    shape: [\n      [\"O\", \"O\"],\n      [\"O\", \"O\"],\n    ],\n    color: \"223, 217, 36\",\n  },\n  S: {\n    shape: [\n      [0, \"S\", \"S\"],\n      [\"S\", \"S\", 0],\n      [0, 0, 0],\n    ],\n    color: \"48, 211, 56\",\n  },\n  T: {\n    shape: [\n      [0, 0, 0],\n      [\"T\", \"T\", \"T\"],\n      [0, \"T\", 0],\n    ],\n    color: \"132, 61, 198\",\n  },\n  Z: {\n    shape: [\n      [\"Z\", \"Z\", 0],\n      [0, \"Z\", \"Z\"],\n      [0, 0, 0],\n    ],\n    color: \"227, 78,78\",\n  },\n};\n\nexport const randomTetromino = () => {\n  const tetrominos = \"IJLOSTZ\";\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n\n  return TETROMINOS[randTetromino];\n};\n","import { useState, useEffect } from \"react\";\nimport { createStage } from \"../gameHelpers\";\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = (newStage) =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex((cell) => cell[0] === 0) === -1) {\n          setRowsCleared((prev) => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, []);\n\n    const updateStage = (prevStage) => {\n      //day tetromino dau\n      const newStage = prevStage.map((row) =>\n        row.map((cell) => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\n      );\n      //ve tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? \"merged\" : \"clear\"}`,\n            ];\n          }\n        });\n      });\n      //kiem tra neu va cham\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    setStage((prev) => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage,rowsCleared];\n};\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  /* border-radius: 5px; */\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`;\n","// import React from 'react';\n// import { StyledCell } from './styles/StyledCell';\n// import { TETROMINOS } from '../tetrominos';\n\n// // React.memo makes sure we only re-render the changed cells\n// const Cell = ({ type }) => (\n//   <StyledCell type={type} color={TETROMINOS[type].color}>\n//     {console.log('rerender cell')}\n//   </StyledCell>\n// );\n\n// export default React.memo(Cell);\n\n\nimport React from 'react';\nimport {StyledCell} from './styles/StyledCell'; \nimport { TETROMINOS } from '../tetrominos';\nconst Cell=({type})=>(\n    <StyledCell type={type} color={TETROMINOS[type].color} >{console.log(\"rerender cell\")}</StyledCell>\n)\n\nexport default React.memo(Cell);","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\n\nexport default Display;\n","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n  box-sizing: border-box;\r\n\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  border: none;\r\n  color: white;\r\n  background: #333;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\n\nexport default StartButton;\n","import styled from 'styled-components';\r\n\r\nexport const StyledTutorial = styled.div`\r\n  box-sizing: border-box;\r\n  text-align:center;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  border: 4px solid #333;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  color: ${props => (props.gameOver ? 'red' : '#999')};\r\n  background: #000;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 0.8rem;\r\n`;\r\n","import React from 'react';\r\nimport { StyledTutorial } from './styles/StyledTutorial';\r\n\r\nconst Tutorial  = () => (\r\n  <StyledTutorial >\r\n  Tutorial:\r\n  <pre>\r\n  sử dụng (←,→) để di chuyển<br/>\r\n  sử dụng (↑) để xoay khối  <br/>\r\n  ấn giữ ↓ để drop nhanh hơn\r\n  </pre>\r\n  \r\n  </StyledTutorial> \r\n);\r\n\r\nexport default Tutorial;","import React, { useState } from \"react\";\nimport { createStage, checkCollision } from \"../gameHelpers\";\n\n//styledComponents\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\n\n//Custom Hooks\nimport { useInterval } from \"../hooks/useInterval\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\n\n//Components\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\nimport Tutorial from './Tutorial';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] =\n    useGameStatus(rowsCleared);\n\n  console.log(\"re-render\");\n\n  const movePlayer = (dir) => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    console.log(\"interval on\");\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  const startGame = () => {\n    //reset tat ca\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n    setGameOver(false);\n  };\n\n  const drop = () => {\n    //tang lv khi nguoi choi awn dc 10 hang\n    if (rows > (level + 1) * 10) {\n      setLevel((prev) => prev + 1);\n      //tang toc do (kho hon)\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      if (player.pos.y < 1) {\n        console.log(\"GAME OVER!!!\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    console.log(\"interval off\");\n    setDropTime(null);\n    drop();\n  };\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  const move = ({ keyCode }) => {\n    //e.keyCode\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(e) => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"gameOver\" />\n          ) : (\n            <div>\n              <Display text={`Score:${score}`} />\n              <Display text={`Rows:${rows}`} />\n              <Display text={`Level:${level}`} />\n            </div>\n          )}\n\n          <StartButton callback={startGame} />\n        </aside>\n        <Tutorial />\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n\n","import { useState, useCallback } from \"react\";\nimport { TETROMINOS, randomTetromino } from \"../tetrominos\";\nimport { STAGE_WIDTH, checkCollision } from \"../gameHelpers\";\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    //co the gui trang thai khoi tao vao trong cap ngoac tron\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n  //tuong duong voi:\n  /* const playerState=useState({\n        pos:{x:0,y:0},\n        tetroino:TETROMINOS[0].shape,\n    collided:false\n\n    });\n     const player=playerState[0];\n     const setPlayer=playerState[1];*/\n\n  function rotate(matrix, dir) {\n    //direction\n    //bien hang thanh cot (doi cho)\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n    //dao nguoc moi hang de nhan dc matrix da xoay\n    if (dir > 0) return mtrx.map(row => row.reverse());\n    return mtrx.reverse();\n  };\n  \n  function playerRotate(stage, dir){\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n    \n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n\n    setPlayer(clonedPlayer);\n  };\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer((prev) => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useEffect, useCallback } from \"react\";\n\nexport const useGameStatus = (rowsCleared) => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  \n  const linePoints = [40, 100, 300, 1200];\n  const calcScore = useCallback(() => {\n      //co diem\n      if (rowsCleared > 0) {\n          //cach tinh diem\n          setScore((prev) => prev + linePoints[rowsCleared - 1] * (level + 1));\n          setRows((prev) => prev + rowsCleared);\n        }\n    }, [level, linePoints, rowsCleared]);\n    \n    useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // nho lan cuoi cung callback\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // thiet lap interval\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}